#全局块#：Nginx服务器全局。

# 指定可以运行nginx服务的用户和用户组，只能在全局块配置

# 指定工作线程数，可以制定具体的进程数，也可使用自动模式，这个指令只能在全局块配置
worker_processes auto；

#全局错误日志定义类型，[ debug | info | notice | warn | error | crit ]
error_log /usr/local/nginx/logs/error.log info;

#events块# 主要影响Nginx服务器与用户的网络连接
#是否开启对多worker process下的网络连接进行序列化 是否允许同时接收多个网络连接
events {
    # 开启的时候，将会对多个Nginx进程接收连接进行序列化，防止多个进程对连接的争抢
    # 默认是开启状态，只能在events块中进行配置
    #accept_mutex on;

    #一个工作进程可以同时接受所有的新连接
    #multi_accept off; 

    #设置允许每一个worker process同时开启的最大连接数 ，连接进入logback，logback满后连接被拒绝
    worker_connections  1024;

}

#http块  代理、缓存和日志定义等绝大多数的功能和第三方模块的配置 !!!!!Nginx服务器作为Web服务器
http {

    #include指令，用于包含其他的配置文件，可以放在配置文件的任何地方 下面的指令将mime.types包含进来  #文件扩展名与文件类型映射表
    include  mime.types;

    # 配置默认类型，如果不加此指令，默认值为text/plain。
    default_type  application/octet-stream;

     #开启高效文件传输模式
    sendfile        on;

    #log_format指令，用于定义日志格式
    #log_format  main 
    
    #access_log off; #取消服务日志    
    # 定义了上面的日志格式后，可以以下面的形式使用日志
    access_log  logs/access.log  main;

    # 设置sendfile最大数据量 如果设置为0，则无限制 默认值为0。
    #sendfile_max_chunk 0;

    #配置连接超时时间 timeout，服务器端对连接的保持时间。默认值为75s;
    #keepalive超时时间。
    keepalive_timeout 65;

    # 配置单连接请求数上限 限制用户通过某一连接向Nginx服务器发送请求的次数。默认是100
    #keepalive_requests number;

    # server set
	# phpmyadmin (= address ip)
	upstream phpmyadmin_server {
    			server phpmyadmin.default.svc.cluster.local:5000;
	}

    #server:每一个http块都可以包含多个server块，而每个server块就相当于一台虚拟主机
    # !!!!!在使用Nginx服务器提供Web服务时 虚拟主机技术使得Nginx服务器可以在同一台服务器上只运行一组Nginx进程，就可以运行多个网站。
    server {
        #全局块：server块也可以包含自己的全局块，同时可以包含多个location块。
        #listen： 可以通过HTTP地址（即常说的“网址”）加“: 80”来访问网站，因为浏览网页服务默认的端口号都是80，因此只需输入网址即可，不用输入“: 80”了。
        listen 80;  #监听来自所有IP，请求80端口的请求 80端口是为HTTP 主要用于WWW即万维网传输信息的协议
        #server_name：用于配置虚拟主机的名称 多个虚拟主机可以同时监听同一个端口,但是server_name需要设置成不一样；可以由多个名称并列，之间用空格隔开 第一个名称作为此虚拟主机的主要名称。
        server_name localhost;

        #error_page  404              /404.html
        # redirect server error pages to the static page /50x.html
    }

    # HTTPS server
    #
    server {
        listen       443 ssl;
        server_name  localhost;

        ssl_certificate      cert.pem;
        ssl_certificate_key  cert.key;
        ssl_protocols		TLSv1.2;

        root				/var/www/wordpress;
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
        #pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        # #配置请求的路由，以及各种页面的处理情况。
        location ~ \.php$ {
            fastcgi_split_path_info ^(.+\.php)(/.+)$;
            fastcgi_pass   wordpress:9000;  #请求转向mysvr 定义的服务器列表
            fastcgi_index  index.php;
            fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
            include        fastcgi_params;
        }
       
    }

}


